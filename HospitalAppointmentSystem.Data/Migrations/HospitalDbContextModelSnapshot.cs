// <auto-generated />
using System;
using HospitalAppointmentSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalAppointmentSystem.Data.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    partial class HospitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            AccessFailedCount = 0,
                            Age = 40,
                            ConcurrencyStamp = "6f59a0b5-3bea-4b7e-9d41-3d145c89de33",
                            Email = "doctor1@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Иван",
                            Gender = "Мъж",
                            LastName = "Петров",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOCTOR1@MAIL.COM",
                            NormalizedUserName = "DOCTOR1@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOBksZMKtQuIxrp2bVHaTFA9lJYmDyNmAO5H/Sv0Hd6ZeB5a5Dov5kI6D7BeC3mSAw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cb31147e-0229-4c11-af86-2a1e1c0532e2",
                            TwoFactorEnabled = false,
                            UserName = "doctor1@mail.com"
                        },
                        new
                        {
                            Id = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            AccessFailedCount = 0,
                            Age = 41,
                            ConcurrencyStamp = "9c5b6bca-521e-44a8-b0af-57f8c50370ce",
                            Email = "doctor2@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Виктория",
                            Gender = "Жена",
                            LastName = "Стоянова",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOCTOR2@MAIL.COM",
                            NormalizedUserName = "DOCTOR2@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGQSxCiXHDVjC1dp3E4jm182JsCrpFZhcQ+etIir3TS0BRf9fEJ6SwRQcJ3D438wJA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "38134987-3d84-4df7-ae9c-ed988122ba31",
                            TwoFactorEnabled = false,
                            UserName = "doctor2@mail.com"
                        },
                        new
                        {
                            Id = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            AccessFailedCount = 0,
                            Age = 42,
                            ConcurrencyStamp = "6c2c4c90-a80e-4287-969b-b140de36b022",
                            Email = "doctor3@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Станимир",
                            Gender = "Мъж",
                            LastName = "Колев",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOCTOR3@MAIL.COM",
                            NormalizedUserName = "DOCTOR3@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEP/5zxJPPx/zPP7+zbwsxz6rj9mJI/QvGV3KC+EXje9eJeT2rVM+vYzWCC9AuqqAAA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9d2cd0f8-d36a-4709-9298-10e09991a32e",
                            TwoFactorEnabled = false,
                            UserName = "doctor3@mail.com"
                        },
                        new
                        {
                            Id = new Guid("88e0d517-065a-49ab-bf2f-b9545e6791b1"),
                            AccessFailedCount = 0,
                            Age = 43,
                            ConcurrencyStamp = "f53ea4a5-e0be-4f30-8ba7-f13394e098ac",
                            Email = "doctor4@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Яна",
                            Gender = "Жена",
                            LastName = "Танева",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOCTOR4@MAIL.COM",
                            NormalizedUserName = "DOCTOR4@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBTo2+6kpPTCzk2hA3emz5f9iAiyYYVB9T+z/I1mLRwo/dv6wgrnKmMEXnEG1FRGIg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e2dfade3-dc45-47f6-b6a2-6dc5394706de",
                            TwoFactorEnabled = false,
                            UserName = "doctor4@mail.com"
                        },
                        new
                        {
                            Id = new Guid("248cf7a1-4b05-461f-a6a2-155f897921de"),
                            AccessFailedCount = 0,
                            Age = 44,
                            ConcurrencyStamp = "428e63e8-1dbf-4fea-95e6-74ec9639db9a",
                            Email = "doctor5@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Виктор",
                            Gender = "Мъж",
                            LastName = "Борисов",
                            LockoutEnabled = false,
                            NormalizedEmail = "DOCTOR5@MAIL.COM",
                            NormalizedUserName = "DOCTOR5@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAE6lhlO13nZeaETIYKFa4VHqbGBxJwJ8MYdch1zY2TiiscZOG5l8v2C3JqZe1GPoA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "40b538a7-f23c-4a80-a725-0edec5b954a9",
                            TwoFactorEnabled = false,
                            UserName = "doctor5@mail.com"
                        },
                        new
                        {
                            Id = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a"),
                            AccessFailedCount = 0,
                            Age = 25,
                            ConcurrencyStamp = "2899cf88-0819-4685-9e54-c74cd35b29ed",
                            Email = "patient1@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Георги",
                            Gender = "Мъж",
                            LastName = "Иванов",
                            LockoutEnabled = false,
                            NormalizedEmail = "PATIENT1@MAIL.COM",
                            NormalizedUserName = "PATIENT1@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIZcyBSyRCvjTSOf2LF/xfh/d8VIqYZp8UypGab47bhbQu6kXeZ9Ld/g3XZBGFOCCw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "58b7de3d-25bc-486f-946b-74392c0c8d51",
                            TwoFactorEnabled = false,
                            UserName = "patient1@mail.com"
                        },
                        new
                        {
                            Id = new Guid("27f342da-167d-43a6-a140-a63826b18da2"),
                            AccessFailedCount = 0,
                            Age = 26,
                            ConcurrencyStamp = "643ceecc-7471-4d2d-87f3-a4c4176bbb31",
                            Email = "patient2@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Елена",
                            Gender = "Жена",
                            LastName = "Симеонова",
                            LockoutEnabled = false,
                            NormalizedEmail = "PATIENT2@MAIL.COM",
                            NormalizedUserName = "PATIENT2@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEOlKJZyUZjGH6K6uF6415IkLwb4d2YkXvAl1FksXCQ0PqF4kQAFkz7fIgYBJDCpdRw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bccc80b9-53b4-4745-ab34-37723726d108",
                            TwoFactorEnabled = false,
                            UserName = "patient2@mail.com"
                        },
                        new
                        {
                            Id = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d"),
                            AccessFailedCount = 0,
                            Age = 27,
                            ConcurrencyStamp = "be4f4571-fff1-4b4a-a655-3cfd124af468",
                            Email = "patient3@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Петър",
                            Gender = "Мъж",
                            LastName = "Николов",
                            LockoutEnabled = false,
                            NormalizedEmail = "PATIENT3@MAIL.COM",
                            NormalizedUserName = "PATIENT3@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE3xG/laMFOFV4B+ab4MtiPdO3i3WAO0YFQQ+Vmi4mpomCV/MDnukvEC7WLBW5oeRA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "57a9e70f-357b-42c9-9880-1f1da9dfb211",
                            TwoFactorEnabled = false,
                            UserName = "patient3@mail.com"
                        },
                        new
                        {
                            Id = new Guid("ab61bdab-b0ff-42e2-bd61-e2e389b8b009"),
                            AccessFailedCount = 0,
                            Age = 28,
                            ConcurrencyStamp = "c585dc3e-a89f-4fc8-91c7-c9ef0e338555",
                            Email = "patient4@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Мария",
                            Gender = "Жена",
                            LastName = "Тодорова",
                            LockoutEnabled = false,
                            NormalizedEmail = "PATIENT4@MAIL.COM",
                            NormalizedUserName = "PATIENT4@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ7RBu9rATRCkO3aLaofoQ+zzS9eYaLJBkcZ+ZUD5+zivudPcCvnk+9UWP9ASX/uGQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "40b27e12-d967-4bdd-82f3-5bff11acb5d4",
                            TwoFactorEnabled = false,
                            UserName = "patient4@mail.com"
                        },
                        new
                        {
                            Id = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06"),
                            AccessFailedCount = 0,
                            Age = 29,
                            ConcurrencyStamp = "d65c05d2-dda1-430e-b7a6-ac670d0891cf",
                            Email = "patient5@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Ивайло",
                            Gender = "Мъж",
                            LastName = "Димитров",
                            LockoutEnabled = false,
                            NormalizedEmail = "PATIENT5@MAIL.COM",
                            NormalizedUserName = "PATIENT5@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBF3mM9z3Borf6wGQ+3/yzk+SvtYkIn4ojTatp7w0+pJmd0AmvKCLK3qbXiWOPFZ9w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5bbc0b4f-c8a6-4d63-9d6e-90880c83c0e2",
                            TwoFactorEnabled = false,
                            UserName = "patient5@mail.com"
                        },
                        new
                        {
                            Id = new Guid("b2a9f3f8-70ef-4e4b-9214-61426bfe43df"),
                            AccessFailedCount = 0,
                            Age = 0,
                            ConcurrencyStamp = "f7e0b9c6-1ed2-44a2-8993-56ec05bf5005",
                            Email = "admin@mail.com",
                            EmailConfirmed = false,
                            FirstName = "Админ",
                            Gender = "Друг",
                            LastName = "Админов",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MAIL.COM",
                            NormalizedUserName = "ADMIN@MAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEGux4xH8kNXEcAm9EehvFGZ3hUPrGcP63DzriDkLBmFMLA8D1rxUKV65nL57Lj/S4Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "657b10c6-e643-429e-9404-d119888490c4",
                            TwoFactorEnabled = false,
                            UserName = "admin@mail.com"
                        });
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Appointment Identifier");

                    b.Property<DateTime>("AppointmentDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("Appointment date and time");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Doctor Identifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Patient Identifier");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f3c1008-a8ef-4a08-ae84-a091ab93fbf1"),
                            AppointmentDateTime = new DateTime(2025, 3, 19, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("bf80af05-1aba-4890-9800-ea6ba6ab935b"),
                            AppointmentDateTime = new DateTime(2025, 2, 3, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("ab61bdab-b0ff-42e2-bd61-e2e389b8b009")
                        },
                        new
                        {
                            Id = new Guid("d4cc8af5-655f-4bc3-883e-f684e2c77545"),
                            AppointmentDateTime = new DateTime(2025, 2, 26, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("1c8b6619-b4c2-415f-9ace-137e9ee09eaa"),
                            AppointmentDateTime = new DateTime(2025, 2, 12, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("4e2615dd-35ae-46cc-b080-6348653e17f8"),
                            AppointmentDateTime = new DateTime(2025, 3, 13, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("eb8f1e2b-005d-47b8-81c9-b0beaed7b2cd"),
                            AppointmentDateTime = new DateTime(2025, 2, 21, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("1249ffc1-3e3e-4c2c-a171-bd676cd61a1a"),
                            AppointmentDateTime = new DateTime(2025, 4, 7, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("f13f0923-1c69-484b-98ac-34d769c9536b"),
                            AppointmentDateTime = new DateTime(2025, 2, 19, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("9ec62beb-e40c-47ed-a5a0-f7007335f37c"),
                            AppointmentDateTime = new DateTime(2025, 3, 18, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("41cfa92a-ff97-423d-8d0c-064e71f2b627"),
                            AppointmentDateTime = new DateTime(2025, 2, 19, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("e805d376-575a-4cef-9380-19c1c5e17109"),
                            AppointmentDateTime = new DateTime(2025, 3, 31, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("ec360590-8ec6-4e04-a1c6-654cfbf91bc3"),
                            AppointmentDateTime = new DateTime(2025, 3, 17, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("d852ea7a-1fc1-4707-a16d-ee5cd8c820c0"),
                            AppointmentDateTime = new DateTime(2025, 2, 3, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("aa269968-3c28-489d-af93-7263ec1c37bd"),
                            AppointmentDateTime = new DateTime(2025, 4, 9, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("b0f432ae-9f3e-4cbc-ba2e-9e71a78d98ab"),
                            AppointmentDateTime = new DateTime(2025, 2, 11, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("cdd6c199-71a8-4941-b8f6-b7fbfcb3b5ba"),
                            AppointmentDateTime = new DateTime(2025, 4, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("e8fcc85c-990f-4d06-bfd8-8e8240c797d7"),
                            AppointmentDateTime = new DateTime(2025, 4, 3, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("ab61bdab-b0ff-42e2-bd61-e2e389b8b009")
                        },
                        new
                        {
                            Id = new Guid("f2c20ee6-95e5-4f45-ad9a-20ae40d64754"),
                            AppointmentDateTime = new DateTime(2025, 2, 17, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("382e3325-f8ed-4553-93c5-874c0c47ce11"),
                            AppointmentDateTime = new DateTime(2025, 2, 18, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("3467edc2-c077-450a-b589-c38b03f0edbd"),
                            AppointmentDateTime = new DateTime(2025, 3, 19, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("4871f900-8082-47bc-823d-8d8f5e6f2c24"),
                            AppointmentDateTime = new DateTime(2025, 2, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("964a813c-eff6-46e5-879a-1494954ce8ba"),
                            AppointmentDateTime = new DateTime(2025, 4, 10, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("bfc0623c-246d-4214-8bb7-d74832be08a3"),
                            AppointmentDateTime = new DateTime(2025, 2, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("ab61bdab-b0ff-42e2-bd61-e2e389b8b009")
                        },
                        new
                        {
                            Id = new Guid("6a124d66-072c-4aca-9b44-847c4640d3f8"),
                            AppointmentDateTime = new DateTime(2025, 4, 8, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("64dddc66-5804-41cd-b051-60f20a622edc"),
                            AppointmentDateTime = new DateTime(2025, 3, 28, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("9dce4aec-d57b-407b-9de8-4ad7f04b0cdc"),
                            AppointmentDateTime = new DateTime(2025, 2, 14, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("a6bfc058-d44c-4227-8fd1-b31147b0cb3a"),
                            AppointmentDateTime = new DateTime(2025, 3, 24, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("ab61bdab-b0ff-42e2-bd61-e2e389b8b009")
                        },
                        new
                        {
                            Id = new Guid("446cb7af-e113-4d23-8f27-725332e0394d"),
                            AppointmentDateTime = new DateTime(2025, 3, 7, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("c933f520-2956-4bbc-be40-0042ee83889f"),
                            AppointmentDateTime = new DateTime(2025, 2, 27, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("3ee0e249-e351-4218-8d43-d2bc58bbad26"),
                            AppointmentDateTime = new DateTime(2025, 3, 11, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("91123b74-79b7-4803-94ca-32d924a233aa"),
                            AppointmentDateTime = new DateTime(2025, 3, 12, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("7b4df03b-2f57-4137-a30d-fc7139d9552b"),
                            AppointmentDateTime = new DateTime(2025, 2, 13, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("a3548917-2546-4e5a-b84e-6613b6fcdf09"),
                            AppointmentDateTime = new DateTime(2025, 3, 4, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("1d79bfda-5689-4622-b1ed-782781ab6747"),
                            AppointmentDateTime = new DateTime(2025, 4, 4, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("7a910ff0-8d94-4b80-b3a1-bb41523950e0"),
                            AppointmentDateTime = new DateTime(2025, 2, 21, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("1942c711-74a6-4c14-a7cb-0008992d50d0"),
                            AppointmentDateTime = new DateTime(2025, 3, 20, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("753776d6-c099-443e-9a1e-8bb7d051a97a"),
                            AppointmentDateTime = new DateTime(2025, 4, 4, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("fc07145b-be67-4023-887e-c7614a1ded2b"),
                            AppointmentDateTime = new DateTime(2025, 3, 21, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("f26c2321-5668-4e5e-a221-ea09e7306a11"),
                            AppointmentDateTime = new DateTime(2025, 3, 31, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("24dbe302-b40a-4a12-9abd-9a6010a5d366"),
                            AppointmentDateTime = new DateTime(2025, 2, 24, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("ddb502eb-5387-42a8-8062-992968592a13"),
                            AppointmentDateTime = new DateTime(2025, 3, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("0e20d835-ac99-40e3-98fe-5b09776f6fe0"),
                            AppointmentDateTime = new DateTime(2025, 3, 12, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("60d4b19d-cfe3-466a-9a26-656e61f80749"),
                            AppointmentDateTime = new DateTime(2025, 2, 26, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("b0bf14a6-8741-4c4e-a74b-84ece71ea253"),
                            AppointmentDateTime = new DateTime(2025, 4, 2, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("c5d35a4d-a4ce-4898-a245-b51b4ad52a56"),
                            AppointmentDateTime = new DateTime(2025, 2, 27, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("90be8ee1-5bb4-41d4-b409-8b0e7f2ebb90"),
                            AppointmentDateTime = new DateTime(2025, 3, 5, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("052496b2-68eb-45e3-a23d-95ba0beb862d"),
                            AppointmentDateTime = new DateTime(2025, 2, 10, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("95315d13-1072-47dc-bed6-20e06a7df556"),
                            AppointmentDateTime = new DateTime(2025, 2, 13, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("ab61bdab-b0ff-42e2-bd61-e2e389b8b009")
                        },
                        new
                        {
                            Id = new Guid("2a74bed8-733b-41f4-a7bf-32144cbb1362"),
                            AppointmentDateTime = new DateTime(2025, 3, 27, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("6dc70be1-4e2b-41a6-963d-f62b1dd23864"),
                            AppointmentDateTime = new DateTime(2025, 2, 6, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("31126dc3-96d4-42af-9d82-cc7d4f5d5261"),
                            AppointmentDateTime = new DateTime(2025, 3, 10, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("e88a0ae4-2ddb-400a-a3bb-17ddbff698eb"),
                            AppointmentDateTime = new DateTime(2025, 2, 25, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("9fa1e77c-6fa6-4d9b-9b5f-058ff24b6eda"),
                            AppointmentDateTime = new DateTime(2025, 3, 26, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("cf14ee62-4e3e-40f9-9d06-ab628340d6ac"),
                            AppointmentDateTime = new DateTime(2025, 4, 9, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("8e49b6a3-baf0-4aea-9305-fef5650991b9"),
                            AppointmentDateTime = new DateTime(2025, 3, 12, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("fe012971-4961-46dc-8808-1bafc1b3b935"),
                            AppointmentDateTime = new DateTime(2025, 3, 6, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("b80b5a46-2611-42be-92fd-081058a2a829"),
                            AppointmentDateTime = new DateTime(2025, 3, 12, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("393458e5-cbbb-4d71-8777-828346d67dfe"),
                            AppointmentDateTime = new DateTime(2025, 3, 12, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("5707228a-76cc-46bd-9818-7f79e922368a"),
                            AppointmentDateTime = new DateTime(2025, 2, 18, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("ab61bdab-b0ff-42e2-bd61-e2e389b8b009")
                        },
                        new
                        {
                            Id = new Guid("dda049e1-e528-4cdd-a896-27dab901bb24"),
                            AppointmentDateTime = new DateTime(2025, 4, 3, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        },
                        new
                        {
                            Id = new Guid("d4733e99-f7a6-4a4a-8077-e23e8bd2c4ef"),
                            AppointmentDateTime = new DateTime(2025, 4, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("88e0d517-065a-49ab-bf2f-b9545e6791b1"),
                            IsDeleted = false,
                            PatientId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d")
                        },
                        new
                        {
                            Id = new Guid("5f415103-635c-4634-b9ce-b4da537017a2"),
                            AppointmentDateTime = new DateTime(2025, 2, 24, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("88e0d517-065a-49ab-bf2f-b9545e6791b1"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("8df2fa2b-64a4-4369-8ead-a3ea0d7a1cdb"),
                            AppointmentDateTime = new DateTime(2025, 2, 20, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("88e0d517-065a-49ab-bf2f-b9545e6791b1"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("91a85cdd-f72b-420f-af04-770c18d4be3f"),
                            AppointmentDateTime = new DateTime(2025, 3, 25, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("88e0d517-065a-49ab-bf2f-b9545e6791b1"),
                            IsDeleted = false,
                            PatientId = new Guid("27f342da-167d-43a6-a140-a63826b18da2")
                        },
                        new
                        {
                            Id = new Guid("c010937e-0471-4678-b0de-2b2016195ef3"),
                            AppointmentDateTime = new DateTime(2025, 3, 18, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("88e0d517-065a-49ab-bf2f-b9545e6791b1"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("7a632a32-f7be-4053-8fd1-17d00a978a9a"),
                            AppointmentDateTime = new DateTime(2025, 2, 7, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("248cf7a1-4b05-461f-a6a2-155f897921de"),
                            IsDeleted = false,
                            PatientId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06")
                        },
                        new
                        {
                            Id = new Guid("6170cb48-3031-44b3-87c2-de30e41ab79a"),
                            AppointmentDateTime = new DateTime(2025, 3, 26, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = new Guid("248cf7a1-4b05-461f-a6a2-155f897921de"),
                            IsDeleted = false,
                            PatientId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a")
                        });
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Doctor Identifier");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("Doctor Description");

                    b.Property<Guid>("SpecializationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Specialization Identifier");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a023c7e-5733-4364-aed5-fc81fbd673dc"),
                            Description = "Д-р Иван Петров е завършил Медицинския университет в София. Има над 15 години опит като кардиолог в Александровска болница и е специализирал в Германия по инвазивна кардиология.",
                            SpecializationId = new Guid("d3495565-b898-4f91-b2b1-81907eee1249")
                        },
                        new
                        {
                            Id = new Guid("14108175-e9b7-41e4-a85b-e69b16df9b60"),
                            Description = "Д-р Виктория Стоянова е дипломиран невролог от Медицинския университет в Варна. Работила е в МБАЛ \"Света Марина\" и има дългогодишен опит в лечението на неврологични заболявания.",
                            SpecializationId = new Guid("f4d444aa-ba0b-4ac3-a58f-5a34c317b29a")
                        },
                        new
                        {
                            Id = new Guid("0474b09e-b40c-4a07-821b-608382e23074"),
                            Description = "Д-р Станимир Колев е завършил Медицинския университет в Пловдив. Има над 10 години практика като дерматолог и е специализирал в областта на кожните автоимунни заболявания.",
                            SpecializationId = new Guid("34f31b29-3a0e-4203-8a32-01ac8690e314")
                        },
                        new
                        {
                            Id = new Guid("88e0d517-065a-49ab-bf2f-b9545e6791b1"),
                            Description = "Д-р Яна Танева е ортопед с образование от Медицинския университет в София. Работила е в ортопедичното отделение на ВМА и има специален интерес към спортната медицина.",
                            SpecializationId = new Guid("0ad750ee-b4d1-49ee-b4d8-349f7f54efd8")
                        },
                        new
                        {
                            Id = new Guid("248cf7a1-4b05-461f-a6a2-155f897921de"),
                            Description = "Д-р Виктор Борисов е кардиолог, завършил Медицинския университет в Плевен. Има над 20 години стаж в областта на неинвазивната диагностика и лечението на сърдечни заболявания.",
                            SpecializationId = new Guid("d3495565-b898-4f91-b2b1-81907eee1249")
                        });
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Rating Identifier");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Appointment Identifier");

                    b.Property<decimal>("Attitude")
                        .HasColumnType("decimal(4,2)")
                        .HasComment("Doctor Attitude");

                    b.Property<decimal>("Professionalism")
                        .HasColumnType("decimal(4,2)")
                        .HasComment("Doctor Professionalism");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d91299c1-2545-4492-aeb3-ee462b5ca65a"),
                            AppointmentId = new Guid("4871f900-8082-47bc-823d-8d8f5e6f2c24"),
                            Attitude = 10m,
                            Professionalism = 7m
                        },
                        new
                        {
                            Id = new Guid("d502fe4f-dffe-489d-8b2b-6af13e0fbdfa"),
                            AppointmentId = new Guid("964a813c-eff6-46e5-879a-1494954ce8ba"),
                            Attitude = 10m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("4cf50c30-94ad-4282-b8d8-34831c5e1826"),
                            AppointmentId = new Guid("bfc0623c-246d-4214-8bb7-d74832be08a3"),
                            Attitude = 7m,
                            Professionalism = 7m
                        },
                        new
                        {
                            Id = new Guid("757ceed4-cc99-4d92-94c9-012b7419a9d9"),
                            AppointmentId = new Guid("6a124d66-072c-4aca-9b44-847c4640d3f8"),
                            Attitude = 9m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("ca9e78ec-2d99-49a5-bd71-c718b79b57e1"),
                            AppointmentId = new Guid("64dddc66-5804-41cd-b051-60f20a622edc"),
                            Attitude = 10m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("f7e1f18b-3c11-4552-8656-81e7dfc1c70d"),
                            AppointmentId = new Guid("9dce4aec-d57b-407b-9de8-4ad7f04b0cdc"),
                            Attitude = 8m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("39447118-52c8-4626-a71f-d90fb59c5078"),
                            AppointmentId = new Guid("a6bfc058-d44c-4227-8fd1-b31147b0cb3a"),
                            Attitude = 10m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("ebb1d54e-e17c-4c51-b8b3-a2e5cff860c4"),
                            AppointmentId = new Guid("446cb7af-e113-4d23-8f27-725332e0394d"),
                            Attitude = 7m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("94f4aca2-b6be-49f6-a53e-7b912b71bf6a"),
                            AppointmentId = new Guid("c933f520-2956-4bbc-be40-0042ee83889f"),
                            Attitude = 9m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("411ab272-d666-4990-996a-5e8285cd56e0"),
                            AppointmentId = new Guid("3ee0e249-e351-4218-8d43-d2bc58bbad26"),
                            Attitude = 8m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("49e9306e-4af9-44c5-9619-94ffd52bb774"),
                            AppointmentId = new Guid("91123b74-79b7-4803-94ca-32d924a233aa"),
                            Attitude = 10m,
                            Professionalism = 7m
                        },
                        new
                        {
                            Id = new Guid("3c9e3b78-8ea6-4dfd-a8a0-917eb031c53a"),
                            AppointmentId = new Guid("7b4df03b-2f57-4137-a30d-fc7139d9552b"),
                            Attitude = 8m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("efbb1bca-9957-4f30-9651-c099e952d679"),
                            AppointmentId = new Guid("a3548917-2546-4e5a-b84e-6613b6fcdf09"),
                            Attitude = 10m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("31ddb090-10e7-48c8-b814-b5fd7a0d44aa"),
                            AppointmentId = new Guid("1d79bfda-5689-4622-b1ed-782781ab6747"),
                            Attitude = 8m,
                            Professionalism = 7m
                        },
                        new
                        {
                            Id = new Guid("0c6e1cf9-d753-4d90-a34d-e067d3d1c953"),
                            AppointmentId = new Guid("7a910ff0-8d94-4b80-b3a1-bb41523950e0"),
                            Attitude = 10m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("acaabf8a-8bb9-4d66-be86-daa42b56db07"),
                            AppointmentId = new Guid("1942c711-74a6-4c14-a7cb-0008992d50d0"),
                            Attitude = 9m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("fc0a5717-62a7-4e7a-b7b8-53f83f2212a2"),
                            AppointmentId = new Guid("753776d6-c099-443e-9a1e-8bb7d051a97a"),
                            Attitude = 8m,
                            Professionalism = 7m
                        },
                        new
                        {
                            Id = new Guid("a27db7c4-cabb-4f47-8555-bb5bb8b7dcec"),
                            AppointmentId = new Guid("fc07145b-be67-4023-887e-c7614a1ded2b"),
                            Attitude = 8m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("a395c3e7-9f8b-4f12-8ecc-8660ea94261b"),
                            AppointmentId = new Guid("f26c2321-5668-4e5e-a221-ea09e7306a11"),
                            Attitude = 9m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("1c0d6a5f-3a47-42cc-9e36-c0d2e7d17131"),
                            AppointmentId = new Guid("24dbe302-b40a-4a12-9abd-9a6010a5d366"),
                            Attitude = 8m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("35332c43-6412-4765-a44f-2409843a04e5"),
                            AppointmentId = new Guid("ddb502eb-5387-42a8-8062-992968592a13"),
                            Attitude = 7m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("2660d173-8c5f-4d9b-b57b-0671e885cddf"),
                            AppointmentId = new Guid("0e20d835-ac99-40e3-98fe-5b09776f6fe0"),
                            Attitude = 8m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("9f35cb4a-7921-4371-95a7-1c33d06223c8"),
                            AppointmentId = new Guid("60d4b19d-cfe3-466a-9a26-656e61f80749"),
                            Attitude = 8m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("11c0582a-877b-436b-9067-b097ac9159dd"),
                            AppointmentId = new Guid("b0bf14a6-8741-4c4e-a74b-84ece71ea253"),
                            Attitude = 9m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("7a999084-7b6d-4759-b43f-9c5091688c15"),
                            AppointmentId = new Guid("c5d35a4d-a4ce-4898-a245-b51b4ad52a56"),
                            Attitude = 10m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("479abbb5-f2cc-4c11-a70f-06f8e0e59fa7"),
                            AppointmentId = new Guid("90be8ee1-5bb4-41d4-b409-8b0e7f2ebb90"),
                            Attitude = 10m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("78467ecf-5859-4574-bae5-33f7a87c28d4"),
                            AppointmentId = new Guid("052496b2-68eb-45e3-a23d-95ba0beb862d"),
                            Attitude = 8m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("1a863759-bc69-4a0d-a548-9a44fd559678"),
                            AppointmentId = new Guid("95315d13-1072-47dc-bed6-20e06a7df556"),
                            Attitude = 10m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("b172a154-31ec-4b77-9b35-fa1218c7fba9"),
                            AppointmentId = new Guid("2a74bed8-733b-41f4-a7bf-32144cbb1362"),
                            Attitude = 8m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("94c64559-0840-4440-bed4-afd63301114e"),
                            AppointmentId = new Guid("6dc70be1-4e2b-41a6-963d-f62b1dd23864"),
                            Attitude = 9m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("3835abb2-d92d-47a3-9e85-b649dd94c1e1"),
                            AppointmentId = new Guid("2f3c1008-a8ef-4a08-ae84-a091ab93fbf1"),
                            Attitude = 9m,
                            Professionalism = 7m
                        },
                        new
                        {
                            Id = new Guid("9add6575-6f15-453d-8036-a32d95321ea3"),
                            AppointmentId = new Guid("bf80af05-1aba-4890-9800-ea6ba6ab935b"),
                            Attitude = 9m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("66192e99-7bdf-4e9b-bb41-d1f53a2c3687"),
                            AppointmentId = new Guid("d4cc8af5-655f-4bc3-883e-f684e2c77545"),
                            Attitude = 9m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("2a37a5d2-6c01-4281-b06e-8729971a20ce"),
                            AppointmentId = new Guid("1c8b6619-b4c2-415f-9ace-137e9ee09eaa"),
                            Attitude = 7m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("65902beb-0363-414d-b56d-48d3e2b6c527"),
                            AppointmentId = new Guid("4e2615dd-35ae-46cc-b080-6348653e17f8"),
                            Attitude = 8m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("cd480414-292d-4afe-96ca-128ca108a39c"),
                            AppointmentId = new Guid("eb8f1e2b-005d-47b8-81c9-b0beaed7b2cd"),
                            Attitude = 9m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("ea98339c-d764-4356-887d-0459a3a8d0b5"),
                            AppointmentId = new Guid("1249ffc1-3e3e-4c2c-a171-bd676cd61a1a"),
                            Attitude = 8m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("602f0ed9-3b4d-445a-9628-71e7cb6e22e3"),
                            AppointmentId = new Guid("f13f0923-1c69-484b-98ac-34d769c9536b"),
                            Attitude = 8m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("fdd44599-bc7d-47d5-8fc2-3408adfd4fba"),
                            AppointmentId = new Guid("9ec62beb-e40c-47ed-a5a0-f7007335f37c"),
                            Attitude = 8m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("76119f2f-4e67-4985-9753-4aaa22fa7095"),
                            AppointmentId = new Guid("41cfa92a-ff97-423d-8d0c-064e71f2b627"),
                            Attitude = 9m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("441271b2-c9eb-43f2-ac1c-b266c4605696"),
                            AppointmentId = new Guid("e805d376-575a-4cef-9380-19c1c5e17109"),
                            Attitude = 9m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("3739cf6b-ed92-4c08-8032-80cb83defce4"),
                            AppointmentId = new Guid("ec360590-8ec6-4e04-a1c6-654cfbf91bc3"),
                            Attitude = 10m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("c40a990b-1e80-4466-b1cd-6a6601036ff4"),
                            AppointmentId = new Guid("d852ea7a-1fc1-4707-a16d-ee5cd8c820c0"),
                            Attitude = 9m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("b9b5aa80-bcbc-4caa-a7c6-c50ac9743c98"),
                            AppointmentId = new Guid("aa269968-3c28-489d-af93-7263ec1c37bd"),
                            Attitude = 8m,
                            Professionalism = 7m
                        },
                        new
                        {
                            Id = new Guid("f3393077-3de9-4aa2-b1ce-d3f4d6615751"),
                            AppointmentId = new Guid("b0f432ae-9f3e-4cbc-ba2e-9e71a78d98ab"),
                            Attitude = 8m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("a42cf7a2-ac0c-48f0-a0cc-6abc57c34103"),
                            AppointmentId = new Guid("cdd6c199-71a8-4941-b8f6-b7fbfcb3b5ba"),
                            Attitude = 8m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("45bc2c65-98de-4fc4-bb7e-b7da8f5be3e3"),
                            AppointmentId = new Guid("e8fcc85c-990f-4d06-bfd8-8e8240c797d7"),
                            Attitude = 9m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("d76e7677-e90a-4f76-ba13-c88a278e1a7e"),
                            AppointmentId = new Guid("f2c20ee6-95e5-4f45-ad9a-20ae40d64754"),
                            Attitude = 9m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("5c5380f6-53e0-41b4-830a-9f232a9ec14f"),
                            AppointmentId = new Guid("382e3325-f8ed-4553-93c5-874c0c47ce11"),
                            Attitude = 7m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("37eb0f7e-21c1-4d96-8b08-6fc3317d9ac3"),
                            AppointmentId = new Guid("3467edc2-c077-450a-b589-c38b03f0edbd"),
                            Attitude = 9m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("16ce12ea-3cde-4c30-8bb3-8878c7d6ded1"),
                            AppointmentId = new Guid("31126dc3-96d4-42af-9d82-cc7d4f5d5261"),
                            Attitude = 9m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("80831d9a-4813-4741-9655-709bb25bc6f3"),
                            AppointmentId = new Guid("9fa1e77c-6fa6-4d9b-9b5f-058ff24b6eda"),
                            Attitude = 7m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("0ec83724-6a75-4519-9eab-fa8fa3dbae17"),
                            AppointmentId = new Guid("8e49b6a3-baf0-4aea-9305-fef5650991b9"),
                            Attitude = 7m,
                            Professionalism = 9m
                        },
                        new
                        {
                            Id = new Guid("73015d2e-850d-4f46-9f9f-0b279bbbc39e"),
                            AppointmentId = new Guid("b80b5a46-2611-42be-92fd-081058a2a829"),
                            Attitude = 8m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("c933e98a-dbad-4a7c-a8f0-060c1e162799"),
                            AppointmentId = new Guid("5707228a-76cc-46bd-9818-7f79e922368a"),
                            Attitude = 8m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("bfad4888-3147-4440-86ea-fc3cc023da01"),
                            AppointmentId = new Guid("d4733e99-f7a6-4a4a-8077-e23e8bd2c4ef"),
                            Attitude = 7m,
                            Professionalism = 7m
                        },
                        new
                        {
                            Id = new Guid("58ae04e5-161c-4ac2-8bbb-8f8722145e66"),
                            AppointmentId = new Guid("8df2fa2b-64a4-4369-8ead-a3ea0d7a1cdb"),
                            Attitude = 9m,
                            Professionalism = 10m
                        },
                        new
                        {
                            Id = new Guid("1b739264-a1ae-4b7b-87d0-32593dddc9de"),
                            AppointmentId = new Guid("c010937e-0471-4678-b0de-2b2016195ef3"),
                            Attitude = 9m,
                            Professionalism = 8m
                        },
                        new
                        {
                            Id = new Guid("15d0992d-f744-4a62-8720-93c5878783a7"),
                            AppointmentId = new Guid("7a632a32-f7be-4053-8fd1-17d00a978a9a"),
                            Attitude = 10m,
                            Professionalism = 9m
                        });
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Specialization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Specialization Identifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Specialization Name");

                    b.HasKey("Id");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3495565-b898-4f91-b2b1-81907eee1249"),
                            Name = "Кардиолог"
                        },
                        new
                        {
                            Id = new Guid("f4d444aa-ba0b-4ac3-a58f-5a34c317b29a"),
                            Name = "Невролог"
                        },
                        new
                        {
                            Id = new Guid("34f31b29-3a0e-4203-8a32-01ac8690e314"),
                            Name = "Дерматолог"
                        },
                        new
                        {
                            Id = new Guid("0ad750ee-b4d1-49ee-b4d8-349f7f54efd8"),
                            Name = "Ортопед"
                        });
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Vacation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Vacation Identifier");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Doctor Identifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasComment("Vacation End Date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasComment("Vacation Start Date");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2c8ed8e-207f-4bff-96ad-e60eb020b220"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("913c67ca-b617-487b-a742-5c2ad69bf257"),
                            Name = "Patient",
                            NormalizedName = "PATIENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("74f6ca22-d948-4352-b4ba-722ed47b676a"),
                            RoleId = new Guid("913c67ca-b617-487b-a742-5c2ad69bf257")
                        },
                        new
                        {
                            UserId = new Guid("27f342da-167d-43a6-a140-a63826b18da2"),
                            RoleId = new Guid("913c67ca-b617-487b-a742-5c2ad69bf257")
                        },
                        new
                        {
                            UserId = new Guid("346499bb-4636-4791-93c8-7ef0fd32a87d"),
                            RoleId = new Guid("913c67ca-b617-487b-a742-5c2ad69bf257")
                        },
                        new
                        {
                            UserId = new Guid("ab61bdab-b0ff-42e2-bd61-e2e389b8b009"),
                            RoleId = new Guid("913c67ca-b617-487b-a742-5c2ad69bf257")
                        },
                        new
                        {
                            UserId = new Guid("4eb44df6-f425-4243-bee9-e18d19968f06"),
                            RoleId = new Guid("913c67ca-b617-487b-a742-5c2ad69bf257")
                        },
                        new
                        {
                            UserId = new Guid("b2a9f3f8-70ef-4e4b-9214-61426bfe43df"),
                            RoleId = new Guid("a2c8ed8e-207f-4bff-96ad-e60eb020b220")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Appointment", b =>
                {
                    b.HasOne("HospitalAppointmentSystem.Data.Models.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalAppointmentSystem.Data.Models.ApplicationUser", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Doctor", b =>
                {
                    b.HasOne("HospitalAppointmentSystem.Data.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalAppointmentSystem.Data.Models.Specialization", "Specialization")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Specialization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Rating", b =>
                {
                    b.HasOne("HospitalAppointmentSystem.Data.Models.Appointment", "Appointment")
                        .WithOne("Rating")
                        .HasForeignKey("HospitalAppointmentSystem.Data.Models.Rating", "AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Vacation", b =>
                {
                    b.HasOne("HospitalAppointmentSystem.Data.Models.Doctor", "Doctor")
                        .WithMany("Vacations")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("HospitalAppointmentSystem.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("HospitalAppointmentSystem.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalAppointmentSystem.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("HospitalAppointmentSystem.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Appointment", b =>
                {
                    b.Navigation("Rating");
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Vacations");
                });

            modelBuilder.Entity("HospitalAppointmentSystem.Data.Models.Specialization", b =>
                {
                    b.Navigation("Doctors");
                });
#pragma warning restore 612, 618
        }
    }
}
